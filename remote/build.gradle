plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'org.jetbrains.dokka'
}

android {

    compileSdk 31

    defaultConfig {
        minSdk 14
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFile getDefaultProguardFile('proguard-android.txt')
            proguardFile 'proguard-rules.pro'
            proguardFile 'proguard-debug.pro'
        }

        release {
            minifyEnabled true
            proguardFile getDefaultProguardFile('proguard-android.txt')
            proguardFile 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

}

dependencies {

    implementation "androidx.core:core-ktx:${ktx_core_version}"
    implementation "androidx.appcompat:appcompat:${appcompat_version}"
    implementation "com.google.android.material:material:${material_version}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotilin_version}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotilin_version}"
    implementation "androidx.multidex:multidex:${multidex_version}"


    implementation 'androidx.test:runner:1.3.0'
    testImplementation 'org.json:json:20180813'
    testImplementation 'junit:junit:4.+'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.3'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

tasks.dokkaHtml.configure {
    outputDirectory.set(file("debug/doc"))
}

task deleteObjectJar(type: Delete) {
    delete 'debug/RemoteLib.jar'
}

task exportJar(type: Copy) {
    from('build/intermediates/aar_main_jar/debug/')
    into('debug/')
    include('classes.jar')
    rename('classes.jar', 'RemoteLib.jar')
}

exportJar.dependsOn(deleteObjectJar, build, dokkaHtml)

tasks.whenTaskAdded { task ->
    if (task.name == 'copyDebugJniLibsProjectOnly') {
        task.dependsOn 'exportJar'
    }
}
